---
- name: Install ZSH with homebrew
  homebrew:
    name: zsh
    state: latest
  when: ansible_os_family == "Darwin"

- name: Install ZSH with apt
  apt:
    name: zsh
    state: latest
    update_cache: yes
  become: true
  when: ansible_os_family == "Debian"

- name: Ensure ZSH with dependencies are installed
  apt:
    name: "{{ ['zsh'] + zsh_dependencies }}"
    state: present
    update_cache: yes
  become: true

- name: Change current user shell to ZSH
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh
  become: yes

- name: Ensure ZSH is the default shell
  user:
    name: "{{ ansible_user }}"
    shell: "/usr/bin/zsh"
  become: true

- name: Check if Oh-My-ZSH is installed
  become_user: "{{ user.name }}"
  ansible.builtin.stat:
    path: "{{ user.oh_my_zsh_installation_folder if user.oh_my_zsh_installation_folder is defined else oh_my_zsh_installation_folder }}"
  register: oh_my_zsh_installed

- name: Install Oh-My-ZSH
  become_user: "{{ user.name }}"
  block:
    - name: Create temporary file
      ansible.builtin.tempfile:
        state: file
      register: oh_my_zsh_install_script

    - name: Download Oh-My-ZSH installation script
      ansible.builtin.get_url:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/install_ohmyzsh.sh
        mode: "0700"

    - name: Install Oh-My-ZSH installation script
      command: sh /tmp/install_ohmyzsh.sh --unattended
      register: ohmyzsh_result
      failed_when: "'FAILED' in ohmyzsh_result.stderr"

    - name: Remove the temporary file
      ansible.builtin.file:
        path: /tmp/install_ohmyzsh.sh
        state: absent
      when: oh_my_zsh_install_script.path is defined

  when: not oh_my_zsh_installed.stat.exists

- name: Backup existing zshrc if it exists
  copy:
    src: "{{ ansible_user_home_path }}/.zshrc"
    dest: "{{ ansible_user_home_path }}/.zshrc-backup.{{ ansible_date_time.epoch }}"

- name: Write zshrc
  template:
    src: zshrc.j2
    dest: "{{ ansible_user_home_path }}/.zshrc"
    mode: "u=rw,go=r"

- name: Copy aliases
  become_user: "{{ user.name }}"
  ansible.builtin.copy:
    src: files/zsh/aliases
    dest: "{{ user.oh_my_zsh_custom_folder | default(oh_my_zsh_custom_folder) }}"
    mode: u=rw,g=r,o=r

- name: Clone zsh-autosuggestions
  become_user: "{{ user.name }}"
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "{{ user.oh_my_zsh_custom_folder | default(oh_my_zsh_custom_folder) }}/plugins/zsh-autosuggestions"
    version: master
    force: true
  when: user.oh_my_zsh_install_zsh_autosuggestions | default(oh_my_zsh_install_zsh_autosuggestions)

- name: Clone zsh-syntax-highlighting
  become_user: "{{ user.name }}"
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting
    dest: "{{ user.oh_my_zsh_custom_folder | default(oh_my_zsh_custom_folder) }}/plugins/zsh-syntax-highlighting"
    version: master
    force: true
  when: user.oh_my_zsh_install_zsh_syntax_highlighting | default(oh_my_zsh_install_zsh_syntax_highlighting)
